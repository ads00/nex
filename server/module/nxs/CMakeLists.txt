# This file is generated by premake5
cmake_minimum_required(VERSION 3.1)

project(nxs)

set(NEX_BUILD_DIR "${CMAKE_CURRENT_SOURCE_DIR}../../../build/win32")

# os specific
if(WIN32)
    set(OS_DEFINE_LIST NXS_WIN NDB_WIN)
endif()

set(CMAKE_CONFIGURATION_TYPES "Debug;Release;Profile;" CACHE STRING "" FORCE)
set(CMAKE_CXX_STANDARD 14)
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wall")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -pedantic")
set(CMAKE_BUILD_TYPE Release )

################################################## PATH
# include path
set(INCLUDE_LIST
        ../../../extlib/boost/include
        include
        ../../../../nds/include
        ../../../../ndb/include)
include_directories(${INCLUDE_LIST})

# lib path
link_directories(../../../extlib/boost/lib/)

# source
file(GLOB_RECURSE SOURCE_LIST "source/*.cpp")
file(GLOB_RECURSE NDB_SOURCE_LIST "../../../../ndb/source/ndb/*.cpp"  "../../../../ndb/source/ndb/*.c")

# binary
add_library(nxs SHARED ${SOURCE_LIST} ${NDB_SOURCE_LIST})

# define
target_compile_definitions(nxs PUBLIC ${OS_DEFINE_LIST} NDB_ENGINE_SQL)

# lib
set(LIB_LIST
        user32
        wsock32
        ws2_32
        boost_system-mgw62-mt-s-1_63
        boost_filesystem-mgw62-mt-s-1_63
        boost_serialization-mgw62-mt-s-1_63)
target_link_libraries(nxs ${LIB_LIST})

set_target_properties( nxs
        PROPERTIES
        ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/lib"
        LIBRARY_OUTPUT_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/lib"
        RUNTIME_OUTPUT_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/lib"
        OUTPUT_NAME  "nxs"
        )


# post build
add_custom_command(
        TARGET nxs POST_BUILD
        COMMAND ${CMAKE_COMMAND} -E copy
        ${CMAKE_CURRENT_SOURCE_DIR}/lib/libnxs.dll
        ${NEX_BUILD_DIR}/nxs.dll)